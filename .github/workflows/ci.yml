name: CI

on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  clone-sdl:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.find-version.output.version}}

    steps:
    - name: Install tools
      run: sudo apt-get install --quiet --assume-yes mercurial zip
    - name: Clone SDL
      run: |
        echo $(pwd)
        hg clone http://hg.libsdl.org/SDL
        cd SDL
    - name: Find and prepare the newest version
      id: find-version
      run: |
        cd SDL
        export SDL_VERSION=$(hg tags | awk 'NR==2 {print $1}')
        hg update $SDL_VERSION
        rm -rf .hg
        cd ..
        zip -r SDL.zip SDL
        echo "::set-output name=version::$SDL_VERSION"
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    - name: Upload the sources
      uses: actions/upload-artifact@v2
      with:
        name: sources
        path: SDL.zip
  
  build-windows:
    runs-on: windows-latest
    needs: clone-sdl
    steps:
    - name: Retrieve the source
      uses: actions/download-artifact@v2
      with:
        name: sources
    - name: Inflate the source
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: SDL.zip
        pathTarget: .
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1 
    - name: Build the source
      run: msbuild.exe SDL\VisualC\SDL\SDL.vcxproj

  
  build-osx:
    runs-on: macos-latest
    needs: clone-sdl
    steps:
    - name: Retrieve the source
      uses: actions/download-artifact@v2
      with:
        name: sources
    - name: Inflate the source
      run: unzip SDL.zip
    - name: Build the source
      run: |
        cd SDL
        mkdir build
        cd build
        ../configure --prefix=$(pwd)/install 
        make
        sudo make install
    - name: Publish the artifact
      uses: actions/upload-artifact@v2
      with:
        name: osx
        path: SDL/build/install/lib/libSDL2-2.0.0.dylib
  
  build-linux:
    runs-on: ubuntu-latest
    needs: clone-sdl
    steps:
    - name: Install all the libraries
      run: |
        sudo apt-get update --quiet --assume-yes
        sudo apt-get install --quiet --assume-yes \
        build-essential mercurial make cmake autoconf automake unzip \
        libtool libasound2-dev libpulse-dev libaudio-dev libx11-dev libxext-dev \
        libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev \
        libxss-dev libgl1-mesa-dev libdbus-1-dev libudev-dev libgles2-mesa-dev \
        libegl1-mesa-dev libibus-1.0-dev fcitx-libs-dev libsamplerate0-dev \
        libsndio-dev libwayland-dev libxkbcommon-dev
    - name: Retrieve the source
      uses: actions/download-artifact@v2
      with:
        name: sources
    - name: Inflate the source
      run: unzip SDL.zip
    - name: Build the source
      run: |
        cd SDL
        mkdir build
        cd build
        ../configure --prefix=$(pwd)/install 
        make
        sudo make install
        strip install/lib/libSDL2.so
    - name: Publish the artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-x64
        path: SDL/build/install/lib/libSDL2.so

